name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  BROADCAST_DRIVER: reverb
  REVERB_APP_ID: 103572
  REVERB_APP_KEY: 9sti8efoslfj19s7it0d
  REVERB_APP_SECRET: f1be6fajrwvspvwzmwwz
  REVERB_HOST: 127.0.0.1
  REVERB_PORT: 8080

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set Broadcasting Environment
        run: |
          echo "BROADCAST_DRIVER=reverb" >> .env
          echo "REVERB_APP_ID=${{ env.REVERB_APP_ID }}" >> .env
          echo "REVERB_APP_KEY=${{ env.REVERB_APP_KEY }}" >> .env
          echo "REVERB_APP_SECRET=${{ env.REVERB_APP_SECRET }}" >> .env
          echo "REVERB_HOST=${{ env.REVERB_HOST }}" >> .env
          echo "REVERB_PORT=${{ env.REVERB_PORT }}" >> .env

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Clear Config and Route Cache
        run: |
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Create storage directories
        run: |
          mkdir -p storage/logs
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p bootstrap/cache

      - name: Set permissions
        run: |
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache

      - name: Run Tests
        env:
          APP_ENV: testing
          APP_DEBUG: true
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
          MAIL_MAILER: array
        run: ./vendor/bin/pest --display-errors --display-warnings
